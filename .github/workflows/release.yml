name: Build Electron App

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: x64
          - os: macos-latest
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller flask flask-cors

      - name: Compile Flask Backend with PyInstaller
        run: pyinstaller --onefile --name web_app web_app.py

      - name: Install Frontend Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Build Electron App
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npm run build:electron:${{ matrix.arch }}
          else
            npm run build:electron
          fi
        shell: bash
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyms-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            dist/
            out/
            release/
            *.exe
            *.dmg
            *.AppImage
