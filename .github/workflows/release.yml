name: Build Electron App

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.core.yml
          environment-name: backend
          init-shell: bash
          cache-environment: true
          cache-downloads: true

      - name: Install pip-only dependencies + pyinstaller
        run: |
          micromamba run -n backend pip install -r requirements.extra.txt
          micromamba run -n backend pip install pyinstaller

      - name: Build Flask Backend Binary
        run: |
          micromamba run -n backend pyinstaller --clean --log-level DEBUG --onefile --name web_app web_app.py
          mkdir -p backend-out
          mv dist/web_app backend-out/web_app_linux  # For Linux; adjust if needed

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web_app_binary
          path: backend-out/

  build-frontend:
    needs: build-backend
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Backend Binary
        uses: actions/download-artifact@v4
        with:
          name: web_app_binary
          path: electron-app/public/backend/

      - name: Install Frontend Dependencies
        working-directory: electron-app
        run: npm install

      - name: Build React App
        working-directory: electron-app
        run: npm run build

      - name: Install Playwright and Dependencies
        working-directory: electron-app
        run: |
          npm install --save-dev playwright @playwright/test
          npx playwright install
        shell: bash

      - name: Install Playwright Browser Deps (Linux only)
        if: runner.os == 'Linux'
        working-directory: electron-app
        run: npx playwright install-deps

      - name: Run Playwright Tests
        working-directory: electron-app
        run: npm run test:playwright
        env:
          CI: true

      - name: Build Electron App
        working-directory: electron-app
        run: npm run build:electron -- --${{ matrix.arch }}
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyms-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            dist/
            release/
            out/
            *.exe
            *.AppImage
            *.dmg
