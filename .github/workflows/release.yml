name: Build Electron App

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python Dependencies & Build Flask Binary
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller flask flask-cors
          
          pyinstaller --onefile --name web_app web_app.py

          # Create target folder inside Electron app
          mkdir -p electron/public/backend

          # Copy the binary to Electron app based on OS
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp dist/web_app.exe electron/public/backend/web_app.exe
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cp dist/web_app electron/public/backend/web_app_macos
          else
            cp dist/web_app electron/public/backend/web_app_linux
          fi
        shell: bash

      - name: Install Frontend Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Build Electron App
        run: npm run build:electron
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyms-${{ matrix.os }}
          path: |
            dist/
            release/
            out/
            *.exe
            *.dmg
            *.AppImage
